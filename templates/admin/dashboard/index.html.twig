{% extends 'base.html.twig' %}

{% block title %}Tableau de Bord Admin - TAB Logistique{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/dashboard-cards.css') }}">
    <link rel="stylesheet" href="{{ asset('css/dashboard.css') }}">
    <link rel="stylesheet" href="{{ asset('css/data-tables.css') }}">
    <link rel="stylesheet" href="{{ asset('css/admin-user.css') }}">
    <link rel="stylesheet" href="{{ asset('css/admin-forms.css') }}">
    <link rel="stylesheet" href="{{ asset('css/animations.css') }}">
    
    <style>
        .kpi-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 20px;
            position: relative;
            overflow: hidden;
        }
        
        .kpi-card::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -50%;
            width: 200%;
            height: 200%;
            background: rgba(255,255,255,0.1);
            transform: rotate(45deg);
            transition: all 0.3s ease;
        }
        
        .kpi-card:hover::before {
            transform: rotate(45deg) translate(20px, 20px);
        }
        
        .kpi-value {
            font-size: 2.5rem;
            font-weight: bold;
            margin-bottom: 5px;
        }
        
        .kpi-label {
            font-size: 0.9rem;
            opacity: 0.9;
        }
        
        .kpi-trend {
            position: absolute;
            top: 15px;
            right: 15px;
            font-size: 1.2rem;
        }
        
        .performance-gauge {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            background: conic-gradient(from 0deg, #28a745 0deg, #28a745 var(--percentage), #e9ecef var(--percentage));
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
        }
        
        .performance-gauge::before {
            content: '';
            width: 70px;
            height: 70px;
            border-radius: 50%;
            background: white;
            position: absolute;
        }
        
        .performance-gauge .gauge-value {
            position: relative;
            z-index: 1;
            font-weight: bold;
            color: #333;
        }
        
        .alert-item {
            border-left: 4px solid;
            margin-bottom: 10px;
            padding: 10px 15px;
            border-radius: 5px;
            background: white;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        
        .alert-danger { border-left-color: #dc3545; }
        .alert-warning { border-left-color: #ffc107; }
        .alert-info { border-left-color: #0dcaf0; }
        
        .activity-timeline {
            position: relative;
            padding-left: 30px;
        }
        
        .activity-timeline::before {
            content: '';
            position: absolute;
            left: 15px;
            top: 0;
            bottom: 0;
            width: 2px;
            background: #e9ecef;
        }
        
        .activity-item {
            position: relative;
            margin-bottom: 20px;
            background: white;
            padding: 15px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }
        
        .activity-item::before {
            content: '';
            position: absolute;
            left: -22px;
            top: 20px;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background: #0d6efd;
            border: 3px solid white;
            box-shadow: 0 0 0 2px #0d6efd;
        }
        
        .task-item {
            display: flex;
            align-items: center;
            padding: 12px;
            margin-bottom: 8px;
            background: #f8f9fa;
            border-radius: 8px;
            transition: all 0.2s;
        }
        
        .task-item:hover {
            background: #e9ecef;
            transform: translateX(5px);
        }
        
        .task-priority-high { border-left: 4px solid #dc3545; }
        .task-priority-medium { border-left: 4px solid #ffc107; }
        .task-priority-low { border-left: 4px solid #28a745; }
        
        .dashboard-widget {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.05);
            margin-bottom: 20px;
            overflow: hidden;
            transition: transform 0.2s ease;
        }
        
        .dashboard-widget:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0,0,0,0.1);
        }
        
        .widget-header {
            padding: 20px;
            border-bottom: 1px solid #e9ecef;
            background: linear-gradient(45deg, #f8f9fa, #ffffff);
        }
        
        .widget-body {
            padding: 20px;
        }
    </style>
{% endblock %}

{% block sidebar %}
<nav class="col-md-2 d-none d-md-block sidebar">
    <div class="position-sticky pt-3">
        <ul class="nav flex-column">
            <li class="nav-item">
                <a class="nav-link active" href="{{ path('app_admin_dashboard') }}">
                    <i class="fas fa-tachometer-alt me-2"></i>Tableau de Bord
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="{{ path('app_colis_index') }}">
                    <i class="fas fa-box me-2"></i>Gestion des Colis
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="{{ path('app_user_index') }}">
                    <i class="fas fa-users me-2"></i>Gestion des Utilisateurs
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="{{ path('app_expediteur_index') }}">
                    <i class="fas fa-paper-plane me-2"></i>Expéditeurs
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="{{ path('app_destinataire_index') }}">
                    <i class="fas fa-map-marker-alt me-2"></i>Destinataires
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="{{ path('app_warehouse_index') }}">
                    <i class="fas fa-warehouse me-2"></i>Entrepôts
                </a>
            </li>
        </ul>
    </div>
</nav>
{% endblock %}

{% block main_class %}col-md-10{% endblock %}

{% block body %}
<div class="dashboard-container">
    <!-- En-tête du tableau de bord -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <div>
            <h1 class="h3 mb-0 text-gray-800">
                <i class="fas fa-tachometer-alt me-2 text-primary"></i>Dashboard Administrateur
            </h1>
            <p class="text-muted mb-0">Vue d'ensemble en temps réel de votre système logistique</p>
        </div>
        <div>
            <button type="button" class="btn btn-sm btn-outline-primary me-2" id="refreshDashboard">
                <i class="fas fa-sync-alt me-1"></i>Actualiser
            </button>
            <div class="btn-group">
                <button type="button" class="btn btn-sm btn-primary dropdown-toggle" data-bs-toggle="dropdown">
                    <i class="fas fa-download me-1"></i>Exporter
                </button>
                <ul class="dropdown-menu dropdown-menu-end">
                    <li><a class="dropdown-item" href="#"><i class="fas fa-file-pdf me-2 text-danger"></i>PDF</a></li>
                    <li><a class="dropdown-item" href="#"><i class="fas fa-file-excel me-2 text-success"></i>Excel</a></li>
                </ul>
            </div>
        </div>
    </div>

    <!-- KPIs principaux -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6">
            <div class="kpi-card">
                <div class="kpi-trend">
                    {% if stats.colis.trend > 0 %}
                        <i class="fas fa-arrow-up text-success"></i>
                    {% elseif stats.colis.trend < 0 %}
                        <i class="fas fa-arrow-down text-danger"></i>
                    {% else %}
                        <i class="fas fa-minus text-warning"></i>
                    {% endif %}
                </div>
                <div class="kpi-value">{{ stats.colis.total|number_format }}</div>
                <div class="kpi-label">Total Colis</div>
                <small>{{ stats.colis.trend|abs }}% vs mois dernier</small>
            </div>
        </div>
        
        <div class="col-xl-3 col-md-6">
            <div class="kpi-card" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
                <div class="kpi-value">{{ performance_metrics.delivery_rate|number_format(1) }}%</div>
                <div class="kpi-label">Taux de Livraison</div>
                <small>{{ stats.colis.recent }} livrés ce mois</small>
            </div>
        </div>
        
        <div class="col-xl-3 col-md-6">
            <div class="kpi-card" style="background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);">
                <div class="kpi-value">{{ performance_metrics.average_delivery_time|number_format(1) }}</div>
                <div class="kpi-label">Jours Moy. Livraison</div>
                <small>Temps moyen de traitement</small>
            </div>
        </div>
        
        <div class="col-xl-3 col-md-6">
            <div class="kpi-card" style="background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);">
                <div class="kpi-value">{{ stats.users.active }}/{{ stats.users.total }}</div>
                <div class="kpi-label">Utilisateurs Actifs</div>
                <small>{{ stats.users.connectedToday }} connectés aujourd'hui</small>
            </div>
        </div>
    </div>

    <!-- Widgets principaux -->
    <div class="row">
        <!-- Colonne gauche -->
        <div class="col-xl-8">
            <!-- Performance Metrics -->
            <div class="dashboard-widget mb-4">
                <div class="widget-header">
                    <h5 class="mb-0">
                        <i class="fas fa-chart-bar me-2 text-primary"></i>Métriques de Performance
                    </h5>
                </div>
                <div class="widget-body">
                    <div class="row text-center">
                        <div class="col-md-3">
                            <div class="performance-gauge" style="--percentage: {{ performance_metrics.delivery_rate * 3.6 }}deg;">
                                <div class="gauge-value">{{ performance_metrics.delivery_rate }}%</div>
                            </div>
                            <h6 class="mt-2">Taux de Livraison</h6>
                        </div>
                        <div class="col-md-3">
                            <div class="performance-gauge" style="--percentage: {{ performance_metrics.customer_satisfaction * 3.6 }}deg;">
                                <div class="gauge-value">{{ performance_metrics.customer_satisfaction }}%</div>
                            </div>
                            <h6 class="mt-2">Satisfaction Client</h6>
                        </div>
                        <div class="col-md-3">
                            <div class="performance-gauge" style="--percentage: {{ performance_metrics.processing_efficiency * 3.6 }}deg;">
                                <div class="gauge-value">{{ performance_metrics.processing_efficiency }}%</div>
                            </div>
                            <h6 class="mt-2">Efficacité Traitement</h6>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <h4 class="text-primary">{{ stats.warehouses.total }}</h4>
                                <h6>Entrepôts Actifs</h6>
                                <small class="text-muted">
                                    {% if stats.warehouses.mostActive %}
                                        Plus actif: {{ stats.warehouses.mostActive.nom }}
                                    {% endif %}
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Graphique des statuts -->
            <div class="dashboard-widget mb-4">
                <div class="widget-header">
                    <h5 class="mb-0">
                        <i class="fas fa-chart-pie me-2 text-primary"></i>Distribution des Statuts
                    </h5>
                    <select class="form-select form-select-sm" style="width: auto;">
                        <option>Derniers 30 jours</option>
                        <option>Derniers 90 jours</option>
                        <option>Année en cours</option>
                    </select>
                </div>
                <div class="widget-body">
                    <canvas id="statusChart" 
                            data-labels="{{ status_data.labels|json_encode|e('html_attr') }}"
                            data-values="{{ status_data.data|json_encode|e('html_attr') }}"
                            data-colors="{{ status_data.colors|json_encode|e('html_attr') }}"></canvas>
                </div>
            </div>
            
            <!-- Graphique mensuel -->
            <div class="dashboard-widget">
                <div class="widget-header">
                    <h5 class="mb-0">
                        <i class="fas fa-chart-line me-2 text-primary"></i>Évolution Mensuelle
                    </h5>
                </div>
                <div class="widget-body">
                    <canvas id="monthlyChart" 
                            data-labels="{{ monthly_data.labels|json_encode|e('html_attr') }}"
                            data-created="{{ monthly_data.created|json_encode|e('html_attr') }}"
                            data-delivered="{{ monthly_data.delivered|json_encode|e('html_attr') }}"></canvas>
                </div>
            </div>
        </div>
        
        <!-- Colonne droite -->
        <div class="col-xl-4">
            <!-- Alertes prioritaires -->
            <div class="dashboard-widget mb-4">
                <div class="widget-header">
                    <h5 class="mb-0">
                        <i class="fas fa-exclamation-triangle me-2 text-warning"></i>Alertes Prioritaires
                    </h5>
                    <span class="badge bg-danger">{{ alerts|length }}</span>
                </div>
                <div class="widget-body p-0">
                    {% for alert in alerts|slice(0, 5) %}
                        <div class="alert-item alert-{{ alert.type }}">
                            <div class="d-flex justify-content-between align-items-start">
                                <div>
                                    <strong>{{ alert.message }}</strong>
                                    <br><small class="text-muted">{{ alert.date|ago }}</small>
                                </div>
                                <span class="badge bg-{{ alert.priority == 'high' ? 'danger' : 'warning' }}">
                                    {{ alert.priority == 'high' ? 'Urgent' : 'Important' }}
                                </span>
                            </div>
                        </div>
                    {% else %}
                        <div class="text-center py-4">
                            <i class="fas fa-check-circle fa-3x text-success mb-3"></i>
                            <p class="text-muted">Aucune alerte active</p>
                        </div>
                    {% endfor %}
                </div>
            </div>
            
            <!-- Tâches à faire -->
            <div class="dashboard-widget mb-4">
                <div class="widget-header">
                    <h5 class="mb-0">
                        <i class="fas fa-tasks me-2 text-primary"></i>Tâches à Réaliser
                    </h5>
                    <span class="badge bg-primary">{{ tasks|length }}</span>
                </div>
                <div class="widget-body p-0">
                    {% for task in tasks %}
                        <div class="task-item task-priority-{{ task.priority }}">
                            <div class="form-check me-3">
                                <input class="form-check-input" type="checkbox" id="task{{ loop.index }}">
                            </div>
                            <div class="flex-grow-1">
                                <div class="fw-bold">{{ task.description }}</div>
                                <small class="text-muted">
                                    <i class="fas fa-clock me-1"></i>{{ task.deadline|date('d/m/Y H:i') }}
                                    {% if task.count is defined %}
                                        | {{ task.count }} éléments
                                    {% endif %}
                                </small>
                            </div>
                        </div>
                    {% else %}
                        <div class="text-center py-4">
                            <i class="fas fa-check-circle fa-3x text-success mb-3"></i>
                            <p class="text-muted">Toutes les tâches sont terminées !</p>
                        </div>
                    {% endfor %}
                </div>
            </div>
            
            <!-- Activité récente -->
            <div class="dashboard-widget">
                <div class="widget-header">
                    <h5 class="mb-0">
                        <i class="fas fa-history me-2 text-primary"></i>Activité Récente
                    </h5>
                    <button class="btn btn-sm btn-outline-primary">
                        <i class="fas fa-sync-alt"></i>
                    </button>
                </div>
                <div class="widget-body">
                    <div class="activity-timeline">
                        {% for activity in activities|slice(0, 8) %}
                            <div class="activity-item">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div>
                                        <strong>{{ activity.description }}</strong>
                                        <br><small class="text-muted">par {{ activity.user }}</small>
                                    </div>
                                    <small class="text-muted">{{ activity.date|ago }}</small>
                                </div>
                            </div>
                        {% else %}
                            <div class="text-center py-4">
                                <i class="fas fa-history fa-3x text-muted mb-3"></i>
                                <p class="text-muted">Aucune activité récente</p>
                            </div>
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Tableau des colis récents -->
    <div class="dashboard-widget">
        <div class="widget-header">
            <h5 class="mb-0">
                <i class="fas fa-box me-2 text-primary"></i>Colis Récents
            </h5>
            <a href="{{ path('app_colis_index') }}" class="btn btn-sm btn-outline-primary">Voir tous</a>
        </div>
        <div class="widget-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-light">
                        <tr>
                            <th>Code Tracking</th>
                            <th>Expéditeur</th>
                            <th>Destinataire</th>
                            <th>Statut</th>
                            <th>Date Création</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for colis in recentColis %}
                            <tr>
                                <td>
                                    <code>{{ colis.codeTracking }}</code>
                                </td>
                                <td>{{ colis.expediteur ? colis.expediteur.nomEntrepriseIndividu : '-' }}</td>
                                <td>{{ colis.destinataire ? colis.destinataire.nomEntrepriseIndividu : '-' }}</td>
                                <td>
                                    {% set lastStatus = colis.statuts|last %}
                                    {% if lastStatus %}
                                        <span class="badge bg-{{ lastStatus.typeStatut.name == 'LIVRE' ? 'success' : (lastStatus.typeStatut.name == 'EN_ATTENTE' ? 'warning' : 'primary') }}">
                                            {{ lastStatus.typeStatut.label }}
                                        </span>
                                    {% else %}
                                        <span class="badge bg-secondary">Non défini</span>
                                    {% endif %}
                                </td>
                                <td>{{ colis.dateCreation|date('d/m/Y H:i') }}</td>
                                <td>
                                    <a href="{{ path('app_colis_show', {id: colis.id}) }}" class="btn btn-sm btn-outline-primary">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                </td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Graphique des statuts
    const statusCtx = document.getElementById('statusChart');
    if (statusCtx) {
        new Chart(statusCtx, {
            type: 'doughnut',
            data: {
                labels: JSON.parse(statusCtx.dataset.labels),
                datasets: [{
                    data: JSON.parse(statusCtx.dataset.values),
                    backgroundColor: JSON.parse(statusCtx.dataset.colors),
                    borderWidth: 0
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });
    }
    
    // Graphique mensuel
    const monthlyCtx = document.getElementById('monthlyChart');
    if (monthlyCtx) {
        new Chart(monthlyCtx, {
            type: 'line',
            data: {
                labels: JSON.parse(monthlyCtx.dataset.labels),
                datasets: [{
                    label: 'Colis Créés',
                    data: JSON.parse(monthlyCtx.dataset.created),
                    borderColor: '#0d6efd',
                    backgroundColor: 'rgba(13, 110, 253, 0.1)',
                    tension: 0.4,
                    fill: true
                }, {
                    label: 'Colis Livrés',
                    data: JSON.parse(monthlyCtx.dataset.delivered),
                    borderColor: '#198754',
                    backgroundColor: 'rgba(25, 135, 84, 0.1)',
                    tension: 0.4,
                    fill: true
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'top'
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }
    
    // Gestion des tâches
    document.querySelectorAll('input[id^="task"]').forEach(checkbox => {
        checkbox.addEventListener('change', function() {
            const taskItem = this.closest('.task-item');
            if (this.checked) {
                taskItem.style.opacity = '0.6';
                taskItem.style.textDecoration = 'line-through';
                
                // Simuler la mise à jour via AJAX
                setTimeout(() => {
                    taskItem.style.display = 'none';
                    showNotification('Tâche marquée comme terminée', 'success');
                }, 500);
            }
        });
    });
    
    // Actualisation du dashboard
    document.getElementById('refreshDashboard')?.addEventListener('click', function() {
        this.disabled = true;
        this.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Actualisation...';
        
        // Simulation d'actualisation
        setTimeout(() => {
            window.location.reload();
        }, 1000);
    });
    
    // Animation des cartes KPI
    const kpiCards = document.querySelectorAll('.kpi-card');
    kpiCards.forEach((card, index) => {
        card.style.opacity = '0';
        card.style.transform = 'translateY(20px)';
        
        setTimeout(() => {
            card.style.transition = 'all 0.5s ease';
            card.style.opacity = '1';
            card.style.transform = 'translateY(0)';
        }, index * 100);
    });
    
    // Animation des widgets
    const widgets = document.querySelectorAll('.dashboard-widget');
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, observerOptions);
    
    widgets.forEach(widget => {
        widget.style.opacity = '0';
        widget.style.transform = 'translateY(30px)';
        widget.style.transition = 'all 0.6s ease';
        observer.observe(widget);
    });
});

// Fonction pour afficher les notifications
function showNotification(message, type = 'info') {
    let container = document.getElementById('notification-container');
    if (!container) {
        container = document.createElement('div');
        container.id = 'notification-container';
        container.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 9999;
            max-width: 350px;
        `;
        document.body.appendChild(container);
    }
    
    const notification = document.createElement('div');
    notification.className = `alert alert-${type} alert-dismissible fade show`;
    notification.style.cssText = `
        margin-bottom: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        border: none;
        border-left: 4px solid;
    `;
    
    // Couleurs selon le type
    const colors = {
        success: '#198754',
        danger: '#dc3545',
        warning: '#ffc107',
        info: '#0dcaf0'
    };
    
    notification.style.borderLeftColor = colors[type] || colors.info;
    
    notification.innerHTML = `
        <div class="d-flex align-items-center">
            <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'danger' ? 'exclamation-circle' : type === 'warning' ? 'exclamation-triangle' : 'info-circle'} me-2"></i>
            <span>${message}</span>
            <button type="button" class="btn-close ms-auto" data-bs-dismiss="alert"></button>
        </div>
    `;
    
    container.appendChild(notification);
    
    // Auto-suppression après 5 secondes
    setTimeout(() => {
        if (notification.parentNode) {
            notification.classList.remove('show');
            setTimeout(() => notification.remove(), 150);
        }
    }, 5000);
}

// Mise à jour en temps réel (simulation)
setInterval(() => {
    // Mise à jour du compteur d'utilisateurs connectés
    const connectedElement = document.querySelector('.kpi-card:nth-child(4) .kpi-value');
    if (connectedElement) {
        const currentValue = connectedElement.textContent.split('/');
        if (currentValue.length === 2) {
            const connected = parseInt(currentValue[0]);
            const total = parseInt(currentValue[1]);
            
            // Simulation de changement
            if (Math.random() > 0.7) {
                const newConnected = Math.max(0, connected + (Math.random() > 0.5 ? 1 : -1));
                connectedElement.textContent = `${newConnected}/${total}`;
            }
        }
    }
}, 30000); // Mise à jour toutes les 30 secondes
</script>
{% endblock %}