{% extends 'base.html.twig' %}

{% block title %}Créer un colis - Étape 5{% endblock %}

{% block sidebar %}
<nav class="col-md-2 d-none d-md-block sidebar">
    <div class="position-sticky pt-3">
        <ul class="nav flex-column">
            <li class="nav-item">
                <a class="nav-link" href="{{ path('app_colis_index') }}">
                    <i class="fas fa-list me-2"></i>Liste des Colis
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link active" href="#">
                    <i class="fas fa-magic me-2"></i>Assistant de création
                </a>
            </li>
        </ul>
        
        <h6 class="sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted">
            <span>Étapes</span>
        </h6>
        <ul class="nav flex-column">
            <li class="nav-item">
                <a class="nav-link" href="{{ path('app_colis_wizard_step1') }}">
                    <i class="fas fa-box me-2"></i>1. Informations de base
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="{{ path('app_colis_wizard_step2') }}">
                    <i class="fas fa-paper-plane me-2"></i>2. Expéditeur
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="{{ path('app_colis_wizard_step3') }}">
                    <i class="fas fa-map-marker-alt me-2"></i>3. Destinataire
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="{{ path('app_colis_wizard_step4') }}">
                    <i class="fas fa-clipboard-list me-2"></i>4. Statut initial
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link active">
                    <i class="fas fa-truck me-2"></i>5. Transport
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link {{ max_step >= 6 ? '' : 'disabled' }}" href="{{ max_step >= 6 ? path('app_colis_wizard_step6') : '#' }}">
                    <i class="fas fa-camera me-2"></i>6. Photos
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link {{ max_step >= 7 ? '' : 'disabled' }}" href="{{ max_step >= 7 ? path('app_colis_wizard_step7') : '#' }}">
                    <i class="fas fa-file-alt me-2"></i>7. Documents
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link {{ max_step >= 8 ? '' : 'disabled' }}" href="{{ max_step >= 8 ? path('app_colis_wizard_review') : '#' }}">
                    <i class="fas fa-check-circle me-2"></i>8. Vérification
                </a>
            </li>
        </ul>
    </div>
</nav>
{% endblock %}

{% block main_class %}col-md-10{% endblock %}

{% block body %}
    <!-- Messages flash -->
    {% for label, messages in app.flashes %}
        {% for message in messages %}
            <div class="alert alert-{{ label }} alert-dismissible fade show mb-4" role="alert">
                {{ message }}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        {% endfor %}
    {% endfor %}

    <div class="container-fluid mx-auto px-4 py-4">
        <!-- Entête de la page -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <h1 class="h3 mb-0 text-gray-800"><i class="fas fa-truck me-2 text-primary"></i>Création d'un nouveau colis</h1>
                <p class="text-muted">Étape 5 sur 8 : Informations de transport</p>
            </div>
            
            <!-- Indicateur de progression -->
            <div class="progress-indicator" style="width: 15rem;">
                <div class="progress">
                    <div class="progress-bar bg-primary progress-bar-striped progress-bar-animated" role="progressbar" style="width: 62.5%" aria-valuenow="62.5" aria-valuemin="0" aria-valuemax="100">62.5%</div>
                </div>
                <div class="text-end mt-1">
                    <small class="text-muted">Étape 5/8</small>
                </div>
            </div>
        </div>

        <!-- Carte principale -->
        <div class="card shadow-sm mb-4 border-primary border-top-0 border-end-0 border-bottom-0 border-3">
            <div class="card-header bg-light py-3">
                <h5 class="mb-0 fw-bold text-primary">
                    <i class="fas fa-shipping-fast me-2"></i>Informations de transport
                </h5>
            </div>
            <div class="card-body">
                <p class="text-muted mb-4">
                    Définissez les détails de transport pour votre colis, incluant le mode de transport et le transporteur.
                </p>
                
                {{ form_start(form, {'attr': {'id': 'wizard_form', 'class': 'needs-validation'}}) }}
                
                <div class="row g-3">
                    <!-- Première colonne -->
                    <div class="col-md-6">
                        <div class="card shadow-sm mb-3">
                            <div class="card-header bg-light">
                                <h6 class="mb-0"><i class="fas fa-truck-loading me-2 text-primary"></i>Mode de transport</h6>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    {{ form_label(form.type_transport) }}
                                    <div class="input-group">
                                        <span class="input-group-text bg-light"><i class="fas fa-shuttle-van"></i></span>
                                        {{ form_widget(form.type_transport, {'attr': {'class': 'form-select'}}) }}
                                    </div>
                                    {{ form_errors(form.type_transport) }}
                                    <div class="form-text">Mode de transport utilisé pour l'acheminement du colis.</div>
                                </div>
                                
                                <div class="mb-3">
                                    {{ form_label(form.compagnie_transport) }}
                                    <div class="input-group">
                                        <span class="input-group-text bg-light"><i class="fas fa-building"></i></span>
                                        {{ form_widget(form.compagnie_transport, {'attr': {'class': 'form-control', 'placeholder': 'Ex: DHL, FedEx, UPS...'}}) }}
                                    </div>
                                    {{ form_errors(form.compagnie_transport) }}
                                    <div class="form-text">Nom de la compagnie de transport.</div>
                                </div>
                                
                                <div class="mb-0">
                                    {{ form_label(form.numero_vol_navire) }}
                                    <div class="input-group">
                                        <span class="input-group-text bg-light"><i class="fas fa-hashtag"></i></span>
                                        {{ form_widget(form.numero_vol_navire, {'attr': {'class': 'form-control', 'placeholder': 'Ex: AF1234, MSC-5678...'}}) }}
                                    </div>
                                    {{ form_errors(form.numero_vol_navire) }}
                                    <div class="form-text">Référence du vol, navire ou véhicule.</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Deuxième colonne -->
                    <div class="col-md-6">
                        <div class="card shadow-sm mb-3">
                            <div class="card-header bg-light">
                                <h6 class="mb-0"><i class="fas fa-calendar-alt me-2 text-primary"></i>Dates et lieux</h6>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <div class="row">
                                        <div class="col-md-6">
                                            {{ form_label(form.date_depart) }}
                                            <div class="input-group">
                                                <span class="input-group-text bg-light"><i class="fas fa-calendar"></i></span>
                                                {{ form_widget(form.date_depart, {'attr': {'class': 'form-control'}}) }}
                                            </div>
                                            {{ form_errors(form.date_depart) }}
                                        </div>
                                        <div class="col-md-6">
                                            {{ form_label(form.lieu_depart) }}
                                            <div class="input-group">
                                                <span class="input-group-text bg-light"><i class="fas fa-map-marker-alt"></i></span>
                                                {{ form_widget(form.lieu_depart, {'attr': {'class': 'form-control', 'placeholder': 'Ex: Paris'}}) }}
                                            </div>
                                            {{ form_errors(form.lieu_depart) }}
                                        </div>
                                    </div>
                                    <div class="form-text">Date et lieu de départ du transport.</div>
                                </div>
                                
                                <div class="mb-3">
                                    <div class="row">
                                        <div class="col-md-6">
                                            {{ form_label(form.date_arrivee) }}
                                            <div class="input-group">
                                                <span class="input-group-text bg-light"><i class="fas fa-calendar-check"></i></span>
                                                {{ form_widget(form.date_arrivee, {'attr': {'class': 'form-control'}}) }}
                                            </div>
                                            {{ form_errors(form.date_arrivee) }}
                                        </div>
                                        <div class="col-md-6">
                                            {{ form_label(form.lieu_arrivee) }}
                                            <div class="input-group">
                                                <span class="input-group-text bg-light"><i class="fas fa-flag-checkered"></i></span>
                                                {{ form_widget(form.lieu_arrivee, {'attr': {'class': 'form-control', 'placeholder': 'Ex: New York'}}) }}
                                            </div>
                                            {{ form_errors(form.lieu_arrivee) }}
                                        </div>
                                    </div>
                                    <div class="form-text">Date et lieu d'arrivée prévus.</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="alert alert-info mt-3">
                    <i class="fas fa-info-circle me-2"></i>
                    Les informations de transport peuvent être modifiées ultérieurement si nécessaire.
                </div>
                
                {# Capture uniquement le jeton CSRF et autres champs cachés #}
                {{ form_rest(form) }}
                
                <!-- Boutons de navigation intégrés directement dans le formulaire -->
                <div class="mt-4 pt-4 border-top d-flex justify-content-between">
                    <div>
                        <a href="{{ path('app_colis_wizard_step4') }}" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left me-2"></i>Précédent
                        </a>
                        
                        <a href="{{ path('app_colis_wizard_cancel') }}" class="btn btn-outline-danger ms-2">
                            <i class="fas fa-trash me-2"></i>Annuler la création
                        </a>
                    </div>
                    
                    <div>
                        <a href="{{ path('app_colis_wizard_step6') }}" class="btn btn-outline-secondary me-2">
                            Ignorer cette étape<i class="fas fa-forward ms-2"></i>
                        </a>
                        
                        <button type="submit" class="btn btn-primary">
                            Suivant<i class="fas fa-arrow-right ms-2"></i>
                        </button>
                    </div>
                </div>
                
                {{ form_end(form, {'render_rest': false}) }}
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Initialisation de la validation Bootstrap
    const forms = document.querySelectorAll('.needs-validation');
    Array.prototype.slice.call(forms).forEach(function(form) {
        form.addEventListener('submit', function(event) {
            // Validation des villes
            const villeDepart = document.getElementById('transport_ville_depart');
            const villeArrivee = document.getElementById('transport_ville_arrivee');
            let hasErrors = false;
            
            // Supprimer les messages d'alerte existants
            const existingAlerts = document.querySelectorAll('.custom-validation-alert');
            existingAlerts.forEach(alert => alert.remove());
            
            if (villeDepart && villeArrivee && 
                villeDepart.value.trim().toLowerCase() === villeArrivee.value.trim().toLowerCase()) {
                
                // Empêcher la soumission du formulaire
                hasErrors = true;
                
                // Afficher les messages d'erreur
                villeDepart.setCustomValidity('La ville de départ et d\'arrivée doivent être différentes');
                villeArrivee.setCustomValidity('La ville de départ et d\'arrivée doivent être différentes');
                
                // Ajouter les classes d'erreur visuelles
                villeDepart.classList.add('is-invalid');
                villeArrivee.classList.add('is-invalid');
                
                // Afficher un message d'erreur général
                const errorAlert = document.createElement('div');
                errorAlert.className = 'alert alert-danger mt-3 custom-validation-alert';
                errorAlert.innerHTML = '<i class="fas fa-exclamation-triangle me-2"></i>La ville de départ et la ville d\'arrivée doivent être différentes.';
                
                // Insérer l'alerte avant les boutons de navigation
                const navigationButtons = form.querySelector('.border-top');
                form.insertBefore(errorAlert, navigationButtons);
            } else {
                // Réinitialiser les validations personnalisées
                if (villeDepart) villeDepart.setCustomValidity('');
                if (villeArrivee) villeArrivee.setCustomValidity('');
            }
            
            // Validation des dates
            const dateDepart = document.getElementById('transport_date_expedition');
            const dateArrivee = document.getElementById('transport_date_livraison_estimee');
            
            if (dateDepart && dateArrivee && dateDepart.value && dateArrivee.value) {
                const departDate = new Date(dateDepart.value);
                const arriveeDate = new Date(dateArrivee.value);
                
                if (departDate > arriveeDate) {
                    // Empêcher la soumission du formulaire
                    hasErrors = true;
                    
                    // Afficher les messages d'erreur
                    dateDepart.setCustomValidity('La date de départ ne peut pas être postérieure à la date d\'arrivée');
                    dateArrivee.setCustomValidity('La date d\'arrivée ne peut pas être antérieure à la date de départ');
                    
                    // Ajouter les classes d'erreur visuelles
                    dateDepart.classList.add('is-invalid');
                    dateArrivee.classList.add('is-invalid');
                    
                    // Afficher un message d'erreur général
                    const errorAlert = document.createElement('div');
                    errorAlert.className = 'alert alert-danger mt-3 custom-validation-alert';
                    errorAlert.innerHTML = '<i class="fas fa-exclamation-triangle me-2"></i>La date d\'expédition ne peut pas être postérieure à la date de livraison estimée.';
                    
                    // Insérer l'alerte avant les boutons de navigation
                    const navigationButtons = form.querySelector('.border-top');
                    form.insertBefore(errorAlert, navigationButtons);
                } else {
                    // Réinitialiser les validations personnalisées
                    dateDepart.setCustomValidity('');
                    dateArrivee.setCustomValidity('');
                }
            }
            
            // Si des erreurs personnalisées sont présentes ou le formulaire est invalide, empêcher la soumission
            if (hasErrors || !form.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
                
                // Faire défiler jusqu'à la première erreur
                const firstAlert = document.querySelector('.custom-validation-alert');
                if (firstAlert) {
                    firstAlert.scrollIntoView({ behavior: 'smooth', block: 'center' });
                }
            }
            
            form.classList.add('was-validated');
        });
        
        // Réinitialiser les messages d'erreur lorsque l'utilisateur modifie les champs de ville
        const villeDepart = document.getElementById('transport_ville_depart');
        const villeArrivee = document.getElementById('transport_ville_arrivee');
        
        if (villeDepart && villeArrivee) {
            [villeDepart, villeArrivee].forEach(field => {
                field.addEventListener('input', clearValidationErrors);
            });
        }
        
        // Réinitialiser les messages d'erreur lorsque l'utilisateur modifie les champs de date
        const dateDepart = document.getElementById('transport_date_expedition');
        const dateArrivee = document.getElementById('transport_date_livraison_estimee');
        
        if (dateDepart && dateArrivee) {
            [dateDepart, dateArrivee].forEach(field => {
                field.addEventListener('input', clearValidationErrors);
            });
        }
        
        function clearValidationErrors() {
            // Supprimer les messages d'alerte existants
            const existingAlerts = document.querySelectorAll('.custom-validation-alert');
            existingAlerts.forEach(alert => alert.remove());
            
            // Réinitialiser la validation des champs de ville
            const villeDepart = document.getElementById('transport_ville_depart');
            const villeArrivee = document.getElementById('transport_ville_arrivee');
            if (villeDepart) villeDepart.setCustomValidity('');
            if (villeArrivee) villeArrivee.setCustomValidity('');
            
            // Réinitialiser la validation des champs de date
            const dateDepart = document.getElementById('transport_date_expedition');
            const dateArrivee = document.getElementById('transport_date_livraison_estimee');
            if (dateDepart) dateDepart.setCustomValidity('');
            if (dateArrivee) dateArrivee.setCustomValidity('');
            
            // Supprimer les classes d'erreur
            [villeDepart, villeArrivee, dateDepart, dateArrivee].forEach(field => {
                if (field) field.classList.remove('is-invalid');
            });
        }
    });
    
    // Initialisation de date picker si nécessaire
    const datePickers = document.querySelectorAll('input[type="date"]');
    if (datePickers.length > 0) {
        // Si vous utilisez un plugin de date picker, vous pouvez l'initialiser ici
    }
});
</script>
{% endblock %}